###############################################################################
# Copyright (c) 2009 Fraunhofer IWU and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     Fraunhofer IWU - initial API and implementation
###############################################################################
# default log4j configuration

# For the general syntax of property based configuration files see the
# documenation of org.apache.log4j.PropertyConfigurator.

# WARNING: Location information can be useful but is very costly in
# terms of computation. 
 
# The root logger uses the appender called console.  
 
# The root logger uses the appenders called console and file. Since no level 
# is specified, note the empty string between the comma (",") and the 
# equals sign ("="), the level of the root logger remains 
# untouched. Log4j always initializes the level for the root logger to 
# DEBUG. The root logger is the only logger that has a default 
# level. By default, all other loggers do not have an assigned level, 
# such that they inherit their level instead. 
 
log4j.rootLogger=INFO, console
#, file
 
###########################################
### LOGGING TO CONSOLE ####################
###########################################
 
# console is set to be ConsoleAppender sending its output to System.out 
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.Threshold=ALL
 
 
# console uses PatternLayout. 
log4j.appender.console.layout=org.apache.log4j.PatternLayout
 
# The conversion pattern consists of date in ISO8601 format, level, 
# thread name, logger name truncated to its rightmost two components 
# and left justified to 17 characters, location information consisting 
# of file name (padded to 13 characters) and line number, nested 
# diagnostic context, the and the application supplied message 
 
#log4j.appender.console.layout.ConversionPattern=%d %-5p [%t] %-17c{2} (%13F:%L) %3x - %m%n 
#log4j.appender.console.layout.ConversionPattern=%-5p [%t] %-17c{1} %3x - %m%n
log4j.appender.console.layout.ConversionPattern=%d [%-15.15t] %-5p %-30.30c{1} - %m%n
#log4j.appender.console.layout.ConversionPattern=%-6r [%15.15t] %-5p %30.30c %x - %m%n

# In this example, we are not interested in INNER loop or SWAP 
# messages.  You might try to set INNER and SWAP to DEBUG for more 
# verbose output. 
 
#log4j.logger.org.apache.log4j.examples.SortAlgo.INNER=INFO 
#log4j.logger.org.apache.log4j.examples.SortAlgo.SWAP=INFO 


###########################################
### LOGGING TO FILE #######################
###########################################

# file logging is currently set up in CommonsPlugin

# Appender file writes to the file "test" in user's home.

# standard file
#log4j.appender.file=org.apache.log4j.FileAppender

# rolling file
#log4j.appender.file=org.apache.log4j.RollingFileAppender
#log4j.appender.file.MaxBackupIndex=5
#log4j.appender.file.MaxFileSize=50000000

# rolling file by date
#log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.file.DatePattern='.'yyyy-MM-dd


#log4j.appender.file.Threshold=ALL
#log4j.appender.file.Append=true

#log4j.appender.file.File=d:\\tmp\\tracelog.log
#log4j.appender.file.File=${user.home}/test


# Appender file uses the PatternLayout.
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d %-5p [%t] %-17c{2} (%13F:%L) %3x - %m%n
#log4j.appender.file.layout.ConversionPattern=%5r %-5p [%t] %c{2} - %m%n


###########################################
### LOGGER SETTINGS #######################
###########################################

#log4j.logger.net.enilink=WARN